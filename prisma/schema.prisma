// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Asset {
  id        String   @id @default(uuid())
  filename  String
  path      String
  mimetype  String
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @unique
  article   Article? @relation(fields: [articleId], references: [id])
  articleId String?
}

model User {
  id       String     @id @default(uuid())
  name     String
  password String
  email    String
  avatar   Asset?
  articles Article[]
  likes    Opinion[]
}

enum OpinionType {
  LIKE
  DISLIKE
}

model Opinion {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  article   Article     @relation(fields: [articleId], references: [id])
  articleId String
  like      OpinionType
}

model Article {
  id       String    @id @default(uuid())
  title    String
  content  String
  author   User      @relation(fields: [authorId], references: [id])
  authorId String
  likes    Opinion[]
  assets   Asset[]
}
